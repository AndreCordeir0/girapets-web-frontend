{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from './../../../environments/environment';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nlet AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = environment.apiURL;\n    }\n    login(loginData) {\n      return this.http.post(`${this.apiUrl}/login`, loginData).pipe(tap(response => {\n        this.tokenObj = response;\n      }));\n    }\n    getObjToken() {\n      console.log(this.tokenObj);\n      return this.tokenObj;\n    }\n    setToken(token) {\n      localStorage.setItem('token', token);\n      localStorage.setItem('usuario', this.tokenObj.nomeUsuario);\n    }\n    getToken() {\n      return localStorage.getItem('token');\n    }\n    getUsuario() {\n      return localStorage.getItem('usuario');\n    }\n    isLoggedIn() {\n      return this.getToken() !== null;\n    }\n    logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('usuario');\n    }\n    getAuthorizationHeader() {\n      const token = this.getToken();\n      if (token) {\n        return new HttpHeaders({\n          'Authorization': `Bearer ${token}`\n        });\n      }\n      return new HttpHeaders();\n    }\n  }\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();\nexport { AuthService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}