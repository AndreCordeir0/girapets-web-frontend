{"ast":null,"code":"import { AdicionarAnimalComponent } from './adicionar-animal/adicionar-animal.component';\nimport { EditarAnimalComponent } from './editar-animal/editar-animal.component';\nimport jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/services/animais.service\";\nimport * as i2 from \"primeng/dynamicdialog\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"./../shared/components/loading-service.service\";\nimport * as i5 from \"../shared/services/auth.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"primeng/card\";\nimport * as i10 from \"primeng/confirmdialog\";\nfunction GerenciarAnimaisComponent_p_card_9_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14)(2, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function GerenciarAnimaisComponent_p_card_9_ng_template_5_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const objeto_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.abrirModalEditar(objeto_r2.id));\n    });\n    i0.ɵɵtext(3, \" Editar \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function GerenciarAnimaisComponent_p_card_9_ng_template_5_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const objeto_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.excluirAnimal(objeto_r2.id));\n    });\n    i0.ɵɵtext(5, \"Excluir\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction GerenciarAnimaisComponent_p_card_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-card\", 9)(1, \"p-header\");\n    i0.ɵɵelement(2, \"img\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p-title\");\n    i0.ɵɵelement(4, \"i\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, GerenciarAnimaisComponent_p_card_9_ng_template_5_Template, 6, 0, \"ng-template\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const objeto_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate1(\"header\", \"\", objeto_r2.nome, \" \");\n    i0.ɵɵpropertyInterpolate(\"subheader\", objeto_r2.sexo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", \"data:image/gif;base64,\" + (objeto_r2 == null ? null : objeto_r2.imagens[0] == null ? null : objeto_r2.imagens[0].url), i0.ɵɵsanitizeUrl);\n  }\n}\nlet GerenciarAnimaisComponent = /*#__PURE__*/(() => {\n  class GerenciarAnimaisComponent {\n    constructor(animaisService, dialogService, messageService, loadingService, confirmationService, authService, router) {\n      this.animaisService = animaisService;\n      this.dialogService = dialogService;\n      this.messageService = messageService;\n      this.loadingService = loadingService;\n      this.confirmationService = confirmationService;\n      this.authService = authService;\n      this.router = router;\n      this.isLoading = true;\n      this.animais = [];\n      this.imageUrls = [];\n    }\n    ngOnInit() {\n      window.scrollTo(0, 0);\n      this.exibirAnimais();\n      const decodedToken = jwt_decode(localStorage.getItem('token'));\n      const expirationDate = new Date(decodedToken.exp * 1000); // Converter para milissegundos\n      const currentDate = new Date();\n      if (expirationDate < currentDate) {\n        console.log('expirou');\n        this.messageService.add({\n          severity: 'error',\n          summary: 'Sessão expirada. Faça login novamente!'\n        });\n        this.router.navigate(['/login']);\n        this.authService.logout();\n      } else {\n        console.log('teste');\n      }\n      setInterval(() => {\n        this.checkTokenExpiration(localStorage.getItem('token'));\n      }, 2.5 * 60 * 1000);\n    }\n    checkTokenExpiration(token) {\n      setInterval(() => {\n        const decodedToken = jwt_decode(token);\n        const expirationDate = new Date(decodedToken.exp * 1000); // Converter para milissegundos\n        const currentDate = new Date();\n        if (expirationDate < currentDate) {\n          console.log('expirou');\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Sessão expirada. Faça login novamente!'\n          });\n          this.router.navigate(['/login']);\n          this.authService.logout();\n        } else {\n          console.log('teste');\n        }\n        return expirationDate < currentDate;\n      }, 2.5 * 60 * 1000);\n    }\n    // Exibindo lista de animais do serviço\n    exibirAnimais() {\n      this.loadingService.ativarLoading();\n      this.animaisService.listarAnimais().subscribe(objetos => {\n        this.animais = objetos;\n        this.loadingService.desativarLoading();\n      }, error => {\n        console.log('Erro:', error);\n        this.loadingService.desativarLoading();\n      });\n    }\n    // Pega os dados do HTML como parâmetro e passa pra uma variável do serviço, a qual exibe os dados apenas do animal selecionado\n    buscarDadosAnimal(id, nomeAnimal, sexoAnimal, descricaoAnimal, especieAnimal, racaAnimal, idadeAnimal, cidadeAnimal, imagens) {\n      let idModel = id;\n      this.nomeAnimal = nomeAnimal;\n      let sexoModel = sexoAnimal;\n      let descricaoModel = descricaoAnimal;\n      let especieModel = especieAnimal;\n      let racaModel = racaAnimal;\n      let idadeModel = idadeAnimal;\n      let cidadeModel = cidadeAnimal;\n      const imagensModel = imagens;\n      this.animaisService.setAtributos(idModel, this.nomeAnimal, sexoModel, descricaoModel, especieModel, racaModel, idadeModel, cidadeModel, imagensModel);\n    }\n    abrirModalEditar(id) {\n      this.loadingService.ativarLoading();\n      setTimeout(() => {\n        const ref = this.dialogService.open(EditarAnimalComponent, {\n          header: \"Editar animal \",\n          data: {\n            idAnimal: id\n          },\n          width: '40%',\n          height: '90%'\n        });\n        ref.onClose.subscribe(res => {\n          if (res) {\n            this.isLoading = true;\n            this.animais = [];\n            this.exibirAnimais();\n          }\n          this.exibirAnimais();\n        });\n        this.loadingService.desativarLoading();\n      }, 100);\n      // Atraso de 1 segundo (1000 milissegundos) antes de abrir a modal\n    }\n\n    addAnimal() {\n      const ref = this.dialogService.open(AdicionarAnimalComponent, {\n        header: \"Adicionar novos animais\",\n        width: '50%',\n        height: '100%'\n      });\n      ref.onClose.subscribe(res => {\n        this.exibirAnimais();\n      });\n    }\n    excluirAnimal(id) {\n      this.confirmationService.confirm({\n        message: 'Tem certeza de que deseja excluir este animal?',\n        accept: () => {\n          this.loadingService.ativarLoading();\n          this.animaisService.removerAnimal(id).subscribe(response => {\n            this.exibirAnimais();\n            this.loadingService.desativarLoading();\n            this.messageService.add({\n              severity: 'success',\n              summary: 'Animal excluído com sucesso.'\n            });\n          }, error => {\n            this.loadingService.desativarLoading();\n            console.log('Erro:', error);\n          });\n        }\n      });\n    }\n  }\n  GerenciarAnimaisComponent.ɵfac = function GerenciarAnimaisComponent_Factory(t) {\n    return new (t || GerenciarAnimaisComponent)(i0.ɵɵdirectiveInject(i1.AnimaisService), i0.ɵɵdirectiveInject(i2.DialogService), i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i4.LoadingService), i0.ɵɵdirectiveInject(i3.ConfirmationService), i0.ɵɵdirectiveInject(i5.AuthService), i0.ɵɵdirectiveInject(i6.Router));\n  };\n  GerenciarAnimaisComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GerenciarAnimaisComponent,\n    selectors: [[\"app-gerenciar-animais\"]],\n    decls: 10,\n    vars: 1,\n    consts: [[1, \"container-tela-manager\"], [\"label\", \"Adicionar\", \"icon\", \"pi pi-plus\", \"iconPos\", \"center\", 1, \"botaoAdotar\", 3, \"click\"], [1, \"container-animais\", 2, \"width\", \"83%\", \"min-width\", \"380px\"], [\"header\", \"Confirma\\u00E7\\u00E3o\", \"icon\", \"pi pi-exclamation-triangle\"], [\"cd\", \"\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-times\", \"label\", \"Voltar\", 3, \"click\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi pi-check\", \"label\", \"Excluir\", 2, \"background\", \"white\", \"color\", \"#0d89ec\", \"border-color\", \"#0d89ec\", 3, \"click\"], [1, \"cards\", \"p-grid\", 2, \"justify-content\", \"space-evenly\", \"padding-top\", \"7%\"], [\"class\", \"p-card-shadow p-col p-md-4\", 3, \"header\", \"subheader\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-card-shadow\", \"p-col\", \"p-md-4\", 3, \"header\", \"subheader\"], [3, \"src\"], [1, \"fa-solid\", \"fa-heart\"], [\"class\", \"gerenciar-animais-footer\", \"pTemplate\", \"footer\"], [2, \"display\", \"flex\", \"justify-content\", \"flex-end\", \"margin-top\", \"-14px\"], [1, \"botoes-card\"], [1, \"botao-card-editar\", 3, \"click\"], [\"type\", \"button\", 1, \"botao-card-excluir\", 3, \"click\"]],\n    template: function GerenciarAnimaisComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r9 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-button\", 1);\n        i0.ɵɵlistener(\"click\", function GerenciarAnimaisComponent_Template_p_button_click_1_listener() {\n          return ctx.addAnimal();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"p-confirmDialog\", 3, 4)(5, \"p-footer\")(6, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function GerenciarAnimaisComponent_Template_button_click_6_listener() {\n          i0.ɵɵrestoreView(_r9);\n          const _r0 = i0.ɵɵreference(4);\n          return i0.ɵɵresetView(_r0.reject());\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function GerenciarAnimaisComponent_Template_button_click_7_listener() {\n          i0.ɵɵrestoreView(_r9);\n          const _r0 = i0.ɵɵreference(4);\n          return i0.ɵɵresetView(_r0.accept());\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"div\", 7);\n        i0.ɵɵtemplate(9, GerenciarAnimaisComponent_p_card_9_Template, 6, 3, \"p-card\", 8);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.animais);\n      }\n    },\n    dependencies: [i7.NgForOf, i8.ButtonDirective, i8.Button, i3.Header, i3.Footer, i3.PrimeTemplate, i9.Card, i10.ConfirmDialog],\n    styles: [\".botao-card-excluir:hover{background-image:linear-gradient(to right,#b65008,#dd4141);border-color:#ff6a00}  .botao-card-editar:hover{background-image:linear-gradient(to right,#2196F3,#242c98)}  .botao-card-excluir{background-image:linear-gradient(to right,#ff6a00,#b42a2a);color:#fff;background:#ff6a00;border:1px solid #ff6a00;padding:.5rem 1rem;font-size:1rem;border-radius:3px;cursor:pointer}  .botao-card-editar{color:#fff;background:#2196F3;border:1px solid #2196F3;padding:.5rem 1rem;font-size:1rem;transition:background-color .2s,color .2s,border-color .2s,box-shadow .2s;border-radius:3px;cursor:pointer}  .botoes-card{display:flex!important;justify-content:space-between!important;width:60%!important}  .p-card-header img{width:320.5px;height:246px}  .titulo-adocao{display:flex;color:#ff6a00;align-items:center;justify-content:center;font-family:dosis,sans-serif;text-transform:uppercase}  .p-toolbar,   .p-toolbar-group-left,   .p-toolbar-group-right{align-items:center;display:flex;height:60px;width:100%!important}  .container-tela-manager{display:flex;flex-direction:column;justify-content:center;align-items:center;margin-top:5%}  .p-grid>.p-col,   .p-grid>[class*=p-col]{box-sizing:border-box;width:320px;max-width:320px;min-width:320px;padding-bottom:5%}  .p-card{background:#ffffff;color:#495057;border-radius:7px;box-shadow:10px;box-shadow:#0000001a 10px 10px 10px 12px;transition:top .5s ease 0s;margin-top:3%;margin-bottom:5%;height:450px}  .p-toolbar{background:white;border-radius:5px}  .filtros{display:flex;align-items:center;justify-content:space-between;padding-bottom:5%;width:66%}  img{border-top-left-radius:7px;border-top-right-radius:7px;width:100%;height:100%}  .p-grid{overflow-x:hidden}  .p-dialog{overflow-x:hidden;min-width:360px}  .p-inputtext{margin:0;border:1px solid #8e8585!important}  .p-dialog .p-dialog-content{background:#ffffff;color:#495057;padding:0 1.5rem 2rem;height:100%;border-bottom-right-radius:3px;border-bottom-left-radius:3px}@media screen and (max-width: 928px){  .p-confirm-dialog{width:300px!important}  .container-tela-manager{display:flex;flex-direction:column;justify-content:center;align-items:center;margin-top:15%}}@media screen and (max-width: 512px){  .container-tela-manager{display:flex;flex-direction:column;justify-content:center;align-items:center;margin-top:23%}  .cards .p-grid{margin-left:-20px!important}}  .spinner-gerenciar-animais .spinner{animation:_ngcontent-%COMP%_rotator 1.4s linear infinite;margin-bottom:25%;margin-top:10%;margin-left:50%!important}@keyframes _ngcontent-%COMP%_rotator{0%{transform:rotate(0)}to{transform:rotate(270deg)}}  .path{stroke-dasharray:187;stroke-dashoffset:0;transform-origin:center;animation:_ngcontent-%COMP%_dash 1.4s ease-in-out infinite,colors 5.6s ease-in-out infinite}@keyframes _ngcontent-%COMP%_colors{0%{stroke:#4285f4}25%{stroke:#de3e35}50%{stroke:#f7c223}75%{stroke:#1b9a59}to{stroke:#4285f4}}@keyframes _ngcontent-%COMP%_dash{0%{stroke-dashoffset:187}50%{stroke-dashoffset:46.75;transform:rotate(135deg)}to{stroke-dashoffset:187;transform:rotate(450deg)}}\"]\n  });\n  return GerenciarAnimaisComponent;\n})();\nexport { GerenciarAnimaisComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}