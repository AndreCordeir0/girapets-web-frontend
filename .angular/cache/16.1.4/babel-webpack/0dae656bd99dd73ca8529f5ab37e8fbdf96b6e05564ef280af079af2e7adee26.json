{"ast":null,"code":"import { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nconst RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RadioButton),\n  multi: true\n};\nclass RadioButton {\n  constructor(cd) {\n    this.cd = cd;\n    this.onClick = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onModelChange = () => {};\n    this.onModelTouched = () => {};\n  }\n  handleClick(event, radioButton, focus) {\n    event.preventDefault();\n    if (this.disabled) {\n      return;\n    }\n    this.select(event);\n    if (focus) {\n      radioButton.focus();\n    }\n  }\n  select(event) {\n    if (!this.disabled) {\n      this.inputViewChild.nativeElement.checked = true;\n      this.checked = true;\n      this.onModelChange(this.value);\n      this.onClick.emit(event);\n    }\n  }\n  writeValue(value) {\n    this.checked = value == this.value;\n    if (this.inputViewChild && this.inputViewChild.nativeElement) {\n      this.inputViewChild.nativeElement.checked = this.checked;\n    }\n    this.cd.markForCheck();\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  setDisabledState(val) {\n    this.disabled = val;\n    this.cd.markForCheck();\n  }\n  onInputFocus(event) {\n    this.focused = true;\n    this.onFocus.emit(event);\n  }\n  onInputBlur(event) {\n    this.focused = false;\n    this.onModelTouched();\n    this.onBlur.emit(event);\n  }\n  onChange(event) {\n    this.select(event);\n  }\n  focus() {\n    this.inputViewChild.nativeElement.focus();\n  }\n}\nclass RadioButtonModule {}\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RADIO_VALUE_ACCESSOR, RadioButton, RadioButtonModule };\n//# sourceMappingURL=primeng-radiobutton.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}