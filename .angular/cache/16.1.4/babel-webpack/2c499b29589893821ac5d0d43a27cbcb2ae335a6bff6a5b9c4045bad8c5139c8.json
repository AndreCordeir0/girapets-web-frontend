{"ast":null,"code":"import { Directive, ElementRef, Input, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, Output, NgModule } from '@angular/core';\nimport { DomHandler } from 'primeng/dom';\nimport { CommonModule } from '@angular/common';\nimport { RippleModule } from 'primeng/ripple';\nimport { PrimeTemplate } from 'primeng/api';\nclass ButtonDirective {\n  constructor(el) {\n    this.el = el;\n    this.iconPos = 'left';\n  }\n  ngAfterViewInit() {\n    this._initialStyleClass = this.el.nativeElement.className;\n    DomHandler.addMultipleClasses(this.el.nativeElement, this.getStyleClass());\n    if (this.icon) {\n      let iconElement = document.createElement(\"span\");\n      iconElement.className = 'p-button-icon';\n      iconElement.setAttribute(\"aria-hidden\", \"true\");\n      let iconPosClass = this.label ? 'p-button-icon-' + this.iconPos : null;\n      if (iconPosClass) {\n        DomHandler.addClass(iconElement, iconPosClass);\n      }\n      DomHandler.addMultipleClasses(iconElement, this.icon);\n      this.el.nativeElement.appendChild(iconElement);\n    }\n    let labelElement = document.createElement(\"span\");\n    if (this.icon && !this.label) {\n      labelElement.setAttribute('aria-hidden', 'true');\n    }\n    labelElement.className = 'p-button-label';\n    labelElement.appendChild(document.createTextNode(this.label || '&nbsp;'));\n    this.el.nativeElement.appendChild(labelElement);\n    this.initialized = true;\n  }\n  getStyleClass() {\n    let styleClass = 'p-button p-component';\n    if (this.icon && !this.label) {\n      styleClass = styleClass + ' p-button-icon-only';\n    }\n    return styleClass;\n  }\n  setStyleClass() {\n    let styleClass = this.getStyleClass();\n    this.el.nativeElement.className = styleClass + ' ' + this._initialStyleClass;\n  }\n  get label() {\n    return this._label;\n  }\n  set label(val) {\n    this._label = val;\n    if (this.initialized) {\n      DomHandler.findSingle(this.el.nativeElement, '.p-button-label').textContent = this._label || '&nbsp;';\n      this.setStyleClass();\n    }\n  }\n  get icon() {\n    return this._icon;\n  }\n  set icon(val) {\n    this._icon = val;\n    if (this.initialized) {\n      if (this.iconPos) DomHandler.findSingle(this.el.nativeElement, '.p-button-icon').className = 'p-button-icon p-button-icon-' + this.iconPos + ' ' + this._icon;else DomHandler.findSingle(this.el.nativeElement, '.p-button-icon').className = 'p-button-icon ' + this._icon;\n      this.setStyleClass();\n    }\n  }\n  ngOnDestroy() {\n    while (this.el.nativeElement.hasChildNodes()) {\n      this.el.nativeElement.removeChild(this.el.nativeElement.lastChild);\n    }\n    this.initialized = false;\n  }\n}\nclass Button {\n  constructor() {\n    this.type = \"button\";\n    this.iconPos = 'left';\n    this.onClick = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'content':\n          this.contentTemplate = item.template;\n          break;\n        default:\n          this.contentTemplate = item.template;\n          break;\n      }\n    });\n  }\n}\nclass ButtonModule {}\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Button, ButtonDirective, ButtonModule };\n//# sourceMappingURL=primeng-button.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}